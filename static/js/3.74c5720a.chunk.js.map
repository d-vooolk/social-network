{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWIthHooks.jsx","components/Profile/ProfileInfo/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","Contacts","contactTitle","contactValue","className","profileInfoStyle","contacts","ProfileData","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","keys","map","key","ProfileDataReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","type","Textarea","styles","ProfileInfo","savePhoto","saveProfile","src","photos","large","userPhoto","avatar","target","files","initialValues","formData","then","descriptionBlock","Preloader","Post","postStyle","post","message","likesCount","MyPosts","memo","postsElements","posts","id","NewPostMessageRedux","values","addPost","newPostText","style","maxLength100","maxLengthCreator","Field","component","name","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","profileStyle","content","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.74c5720a.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverImage\":\"ProfileInfo_coverImage__2-DBJ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"contacts\":\"ProfileInfo_contacts__3y62P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\n            </div>\n            }\n\n            { editMode &&\n            <div>\n                <input\n                    autoFocus={true}\n                    onBlur={deactivateEditMode}\n                    onChange={onStatusChange}\n                    value={status}\n                />\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;\n","import profileInfoStyle from \"./ProfileInfo.module.css\";\nimport React from \"react\";\n\nconst Contacts = ({contactTitle, contactValue}) => {\n    return <div>\n        <b className={profileInfoStyle.contacts}>{contactTitle} : {contactValue}</b>\n    </div>\n}\n\nexport default Contacts;","import React from \"react\";\nimport Contacts from \"./ProfileContacts\";\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return <div>\n        <div>\n            {isOwner && <button onClick={goToEditMode}>edit profile info</button> }\n        </div>\n        <div>\n            <b>Full name: </b> {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\n        </div>\n        {profile.lookingForAJob &&\n        <div>\n            <b>My professionals skills:</b> {profile.lookingForAJobDescription}\n        </div>\n        }\n        <div>\n            <b>About me: </b> {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\n            return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n        })}\n        </div>\n    </div>\n}\n\nexport default ProfileData;","import React from 'react';\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\nimport styles from './ProfileInfo.module.css';\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {\n                error && <div>\n                    {error}\n                </div>\n            }\n            <div>\n                <button>save</button>\n            </div>\n            <div>\n                <b>Full name: </b> {createField('Full name', 'fullName', Input, [])}\n            </div>\n            <div>\n                <b>Looking for a job:</b> {createField('', 'lookingForAJob', Input, [], {type: 'checkbox'})}\n            </div>\n            <div>\n                <b>My professionals skills:</b> {createField('My professionals skills', 'lookingForAJobDescription', Textarea, [])}\n            </div>\n            <div>\n                <b>About me: </b> {createField('About me', 'aboutMe', Textarea, [])}\n            </div>\n            <div>\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={styles.contacts}>\n                    <b>{key}: {createField(key, 'contacts.' + key, Input, [])}</b>\n                </div>\n            })}\n            </div>\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\nexport default ProfileDataReduxForm;","import profileInfoStyle from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWIthHooks\";\nimport React, {useState} from 'react';\nimport userPhoto from '../../../img/header-image.svg';\nimport ProfileData from \"./ProfileData\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nfunction ProfileInfo({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n         saveProfile(formData).then(() => {\n             setEditMode(false);\n         })\n    }\n\n    return (\n        <div>\n            <img src={profile.photos.large || userPhoto} className={profileInfoStyle.avatar}/>\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\n\n            {editMode\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\n                    setEditMode(true)\n                }}/>\n            }\n\n            <div className={profileInfoStyle.descriptionBlock}>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ProfileInfo;","import postStyle from './Post.module.css';\nimport React from 'react';\n\nconst Post = (props) => {\n    return (\n        <div className={postStyle.post}>\n            <div> {props.message} </div>\n            <div> {'likes: ' + props.likesCount} </div>\n        </div>\n    );\n}\n\nexport default Post;","import Post from './Post/Post';\nimport style from './MyPosts.module.css';\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst MyPosts = React.memo((props) => {\n\n    let postsElements = props.posts.map(post =>\n        <Post message={post.message} key={post.id} likesCount={post.likesCount}/>)\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n\n    return (\n        <div>\n            <h3>my posts</h3>\n            <NewPostMessageRedux onSubmit={onAddPost}/>\n            <div className={style.posts}>\n                {postsElements}\n            </div>\n        </div>\n    );\n})\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    component={Textarea}\n                    name={'newPostText'}\n                    validate={[required, maxLength100]}\n                    placeholder={'Post message'}\n                />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst NewPostMessageRedux = reduxForm({\n    form: 'ProfileAddNewPostForm'\n})(AddNewPostForm);\n\nexport default MyPosts;","import React from \"react\";\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import profileStyle from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport React from 'react';\n\n\nfunction Profile(props) {\n    return (\n        <div className={profileStyle.content}>\n\n            <ProfileInfo\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                savePhoto={props.savePhoto}\n                saveProfile={props.saveProfile}\n            />\n            <MyPostsContainer />\n\n        </div>\n    );\n}\n\nexport default Profile;","import profileStyle from './Profile.module.css';\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\nclass ProfileContainer extends React.Component{\n\n    refreshProfile () {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) this.props.history.push('login');\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n\n        return (\n            <div className={profileStyle.content}>\n\n                <Profile {...this.props}\n                        isOwner={!this.props.match.params.userId}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}\n                         savePhoto={this.props.savePhoto}\n                />\n\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);"],"sourceRoot":""}